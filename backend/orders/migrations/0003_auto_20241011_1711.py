# Generated by Django 3.2 on 2024-10-11 10:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0003_auto_20241010_1552'),
        ('warehouses', '0003_alter_productstock_stock'),
        ('orders', '0002_auto_20241011_1603'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orderNo', models.CharField(max_length=50, verbose_name='Код заказа')),
                ('mainOrderNo', models.TextField(help_text='Код заказа (Код сгенерированный порталом. Объединяет несколько заказов. Если один заказ, сделанный на портале, разделился на несколько.)', verbose_name='Сводный код заказа')),
                ('orderTypeExternalCode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Внешний код типа ордера')),
                ('deliveryDate', models.DateField(verbose_name='Дата доставки заказа')),
                ('totalSum', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Общая сумма заказа')),
                ('vatSum', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Сумма начисленного НДС')),
                ('discount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Скидка')),
                ('creationDate', models.DateTimeField(verbose_name='Время и дата оформления заказа')),
                ('deliveryAddress', models.CharField(max_length=255, verbose_name='Адрес доставки')),
                ('comment', models.CharField(max_length=255, verbose_name='комментарий')),
                ('isReturn', models.SmallIntegerField(verbose_name='Признак накладной по возврату тары')),
                ('oLCardType', models.SmallIntegerField(verbose_name='где создан заказ')),
                ('operation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='orders.operation', verbose_name='операция')),
                ('payForm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='orders.payform', verbose_name='форма оплаты')),
                ('warehouse', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='warehouses.warehouse', verbose_name='склад')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ('orderNo',),
                'default_related_name': 'orders',
            },
        ),
        migrations.AlterField(
            model_name='pricelist',
            name='productType',
            field=models.PositiveSmallIntegerField(help_text='Если на точке синхронизации установлен признак isUsePromo=0, то принимается тип продукта:для формы оплаты "1 - Заказ"- базовый = 0, акционный = 2, критический = 4, продукт микс = 7 для формы оплаты "4-возврат тары"- тара = 8Если на точке синхронизации установлен признак isUsePromo=1, то принимается тип продукта:для формы оплаты "1 - Заказ"- базовый = 0для формы оплаты "4-возврат тары"- тара = 8', verbose_name='тип продукта'),
        ),
        migrations.CreateModel(
            name='SyncOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statusOrder', models.PositiveSmallIntegerField(help_text='1 - новый, 2 - выгружен в Б24, 3 - информация о приёме отправлена в портал', verbose_name='Статус состояния заказа')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='orders.order', verbose_name='Заказ')),
            ],
        ),
        migrations.CreateModel(
            name='orderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='цена')),
                ('basePrice', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Цена базового продукта')),
                ('qty', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Заказанное количество')),
                ('vat', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Ставка НДС')),
                ('discount', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Процент скидки')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_in_order', to='orders.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_in_order', to='products.product', verbose_name='товар')),
            ],
            options={
                'verbose_name': 'товар в заказе',
                'verbose_name_plural': 'Товары в заказе',
                'ordering': ('order',),
                'default_related_name': 'products_in_order',
            },
        ),
    ]
